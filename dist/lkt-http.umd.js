(function(c,s){typeof exports=="object"&&typeof module<"u"?s(exports,require("lkt-tools"),require("axios")):typeof define=="function"&&define.amd?define(["exports","lkt-tools","axios"],s):(c=typeof globalThis<"u"?globalThis:c||self,s(c.LktHTTP={},c.LktTools,c.axios))})(this,function(c,s,y){"use strict";const H=(e=>e&&typeof e=="object"&&"default"in e?e:{default:e})(y),P=[200,201,202],U={forceRefresh:!1},v="get",D="post",N="put",F="delete",w="open",M="download";class L{constructor(t,n,r="get"){this.method="get",this.dataType="json",this.currentPage=-1,this.params={},this.renameParams={},this.environment="",this.isFetching=!1,this.isFileUpload=!1,this.forceRefreshFlag=!1,this.unsafeParams=!1,this.onSuccess=void 0,this.validStatuses=P,this.cacheTime=0,this.cache={},this.name=t,this.url=n,this.method=r}setEnvironment(t){return this.environment=t,this}setDataTypeJSON(){return this.dataType="json",this}enableUnsafeParams(){return this.unsafeParams=!0,this}setIsFileUpload(t=!0){return this.isFileUpload=t,this}setParam(t){return this.params[t]={type:void 0},this}renameParam(t,n){return this.params[t]=n,this}setSuccessStatuses(t=P){return this.validStatuses=t,this}setForceRefresh(t=!0){return this.forceRefreshFlag=t,this}setOnSuccess(t){return this.onSuccess=t,this}call(t={}){return A(this,t)}}class j{constructor(t,n,r){this.name=t,this.url=n,this.auth=r}}const o=class{static addResource(e){o.RESOURCES[e.name]=e}static addEnvironment(e){s.isUndefined(o.DEFAULT_ENVIRONMENT)&&(o.DEFAULT_ENVIRONMENT=e.name),o.ENVIRONMENTS[e.name]=e}static getResource(e){if(s.isObject(o.RESOURCES[e]))return o.RESOURCES[e]}static getEnvironment(e){if(s.isObject(o.ENVIRONMENTS[e]))return o.ENVIRONMENTS[e]}};let f=o;f.RESOURCES={},f.ENVIRONMENTS={},f.DEFAULT_ENVIRONMENT=void 0;const C=(e,t,n="default")=>h(e,t,v,n),I=(e,t,n="default")=>h(e,t,D,n),b=(e,t,n="default")=>h(e,t,N,n),V=(e,t,n="default")=>h(e,t,F,n),G=(e,t,n="default")=>h(e,t,w,n),$=(e,t,n="default")=>h(e,t,M,n),h=(e,t,n="get",r="default")=>{let i=new L(e,t,n).setEnvironment(r);return f.addResource(i),E(e)},g=(e,t,n={})=>{let r=new j(e,t,n);return f.addEnvironment(r),O(e)},E=e=>f.getResource(e),O=e=>f.getEnvironment(e),q=e=>{let t=[];for(let n in e)e.hasOwnProperty(n)&&(Array.isArray(e[n])?e[n].length>0&&t.push(n+"="+JSON.stringify(e[n])):t.push(n+"="+e[n]));return t.join("&")},x=(e={})=>s.mergeObjects(U,e),J=e=>!s.isUndefined(E(e));class l{}l.RESOURCE_PARAM_LEFT_SEPARATOR="{",l.RESOURCE_PARAM_RIGHT_SEPARATOR="}";const K=(e,t=P)=>t.length===0?!0:t.indexOf(e)!==-1,W=(e,t)=>{const n=s.cloneObject(e.params),r=e.method.toLowerCase();let i={};for(let a in n)n.hasOwnProperty(a)&&(i[a]=n[a].default);for(let a in t)(e.unsafeParams||t.hasOwnProperty(a)&&e.params.hasOwnProperty(a))&&(e.renameParams.hasOwnProperty(a)?(delete i[a],i[e.renameParams[a]]=t[a]):i[a]=t[a],s.isUndefined(i[a])&&delete i[a]);let d=e.url,u=O(e.environment),m={};u&&u.url&&(d=u.url+d,!s.isUndefined(u.auth)&&!s.isUndefined(u.auth.user)&&(m=u.auth));let p=s.extractFillData(d,i,l.RESOURCE_PARAM_LEFT_SEPARATOR,l.RESOURCE_PARAM_RIGHT_SEPARATOR),R=s.fill(d,i,l.RESOURCE_PARAM_LEFT_SEPARATOR,l.RESOURCE_PARAM_RIGHT_SEPARATOR);if(i=s.deleteObjectKeys(i,p),r==="get"||r==="open"){let a=q(i);R=[R,a].join("?"),i={}}let T;if(e.isFileUpload){T={"Content-Type":"multipart/form-data"};let a=new FormData;for(let _ in i)i.hasOwnProperty(_)&&a.append(_,i[_]);i=a}return{url:R,method:r,data:i,auth:m,validateStatus:a=>K(a,e.validStatuses),headers:T}},A=function(e,t={}){const n=(i,d)=>{i(void 0)};if(s.isUndefined(e))return console.error("Invalid resource",e),s.emptyPromise(n);if(e.isFetching)return s.emptyPromise(n);let r=W(e,t);if(r.method==="get"&&e.cacheTime>0&&!e.forceRefreshFlag&&e.cache[r.url]){let i=s.time();if(e.cache[r.url].moment+e.cacheTime-i>0)return s.emptyPromise((u,m)=>u((()=>s.isFunction(e.onSuccess)?e.onSuccess(e.cache[r.url].r):e.cache[r.url].r)()))}switch(r.method){case"get":case"post":case"put":case"delete":return e.isFetching=!0,H.default(r).then(i=>(e.isFetching=!1,r.method==="get"&&e.cacheTime>0&&(e.cache[r.url]={moment:s.time(),r:i},e.forceRefreshFlag=!1),s.isFunction(e.onSuccess)?e.onSuccess(i):i)).catch(i=>(e.isFetching=!1,Promise.reject(new Error(i))));case"download":case"open":return H.default.get(r.url,{responseType:"blob"}).then(i=>{let d=i.headers["content-disposition"],u="";return d&&d.split(";").forEach(p=>{let R=p.split("=");if(s.trim(R[0])==="filename"){let T=s.trim(R[1]);T=s.trim(T,'"'),u=T}}),window.download(i.data,u),s.isFunction(e.onSuccess)?e.onSuccess(i):i}).catch(i=>i);default:console.warn("Error: Invalid method")}},S=(e="",t={},n={})=>{const r=E(e);return n=x(n),n.forceRefresh===!0&&r.setForceRefresh(!0),A(r,t)},z={methods:{$http(e="",t={},n={}){return S(e,t,n)},$api(e="",t={},n={}){return S(e,t,n)}}},B={install:(e,t)=>{e.mixin(z),g("default",""),window.download=require("downloadjs")}};c.$http=S,c.createHTTPDeleteResource=V,c.createHTTPDownloadResource=$,c.createHTTPEnvironment=g,c.createHTTPGetResource=C,c.createHTTPOpenResource=G,c.createHTTPPostResource=I,c.createHTTPPutResource=b,c.default=B,c.existsHTTPResource=J,c.getHTTPEnvironment=O,c.getHTTPResource=E,Object.defineProperties(c,{__esModule:{value:!0},[Symbol.toStringTag]:{value:"Module"}})});
